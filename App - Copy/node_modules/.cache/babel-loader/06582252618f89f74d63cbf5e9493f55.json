{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shivendra Saurav\\\\Documents\\\\GitHub\\\\StrawsomeShakes\\\\App\\\\src\\\\components\\\\StatusComp.js\";\nimport React, { Component } from 'react';\nimport seconds from './timer/seconds';\nimport minutes from './timer/minutes';\nexport default class Timer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      minutesn: minutes,\n      secondsn: seconds\n    };\n  }\n\n  componentDidMount() {\n    this.myInterval = setInterval(() => {\n      const {\n        secondsn,\n        minutesn\n      } = this.state;\n\n      if (secondsn > 0) {\n        seconds--;\n        this.setState(({\n          secondsn\n        }) => ({\n          secondsn: secondsn - 1\n        }));\n      }\n\n      if (secondsn === 0) {\n        if (minutesn === 0) {\n          clearInterval(this.myInterval);\n        } else {\n          minutes--;\n          seconds = 59;\n          this.setState(({\n            minutesn\n          }) => ({\n            minutesn: minutesn - 1,\n            secondsn: 59\n          }));\n        }\n      }\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.myInterval);\n  }\n\n  render() {\n    const {\n      minutesn,\n      secondsn\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, minutesn === 0 && secondsn === 0 ? /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 23\n      }\n    }, \"Busted!\") : /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 23\n      }\n    }, minutesn, \":\", secondsn < 10 ? `0${secondsn}` : secondsn));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Shivendra Saurav/Documents/GitHub/StrawsomeShakes/App/src/components/StatusComp.js"],"names":["React","Component","seconds","minutes","Timer","state","minutesn","secondsn","componentDidMount","myInterval","setInterval","setState","clearInterval","componentWillUnmount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AAEA,eAAe,MAAMC,KAAN,SAAoBH,SAApB,CAA8B;AAAA;AAAA;AAAA,SACzCI,KADyC,GACjC;AACJC,MAAAA,QAAQ,EAAEH,OADN;AAEJI,MAAAA,QAAQ,EAAEL;AAFN,KADiC;AAAA;;AAMzCM,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,UAAL,GAAkBC,WAAW,CAAC,MAAM;AAChC,YAAM;AAAEH,QAAAA,QAAF;AAAYD,QAAAA;AAAZ,UAAyB,KAAKD,KAApC;;AAEA,UAAIE,QAAQ,GAAG,CAAf,EAAkB;AACdL,QAAAA,OAAO;AACP,aAAKS,QAAL,CAAc,CAAC;AAAEJ,UAAAA;AAAF,SAAD,MAAmB;AAC7BA,UAAAA,QAAQ,EAAEA,QAAQ,GAAG;AADQ,SAAnB,CAAd;AAGH;;AACD,UAAIA,QAAQ,KAAK,CAAjB,EAAoB;AAChB,YAAID,QAAQ,KAAK,CAAjB,EAAoB;AAChBM,UAAAA,aAAa,CAAC,KAAKH,UAAN,CAAb;AACH,SAFD,MAEO;AACHN,UAAAA,OAAO;AACPD,UAAAA,OAAO,GAAG,EAAV;AACA,eAAKS,QAAL,CAAc,CAAC;AAAEL,YAAAA;AAAF,WAAD,MAAmB;AAC7BA,YAAAA,QAAQ,EAAEA,QAAQ,GAAG,CADQ;AAE7BC,YAAAA,QAAQ,EAAE;AAFmB,WAAnB,CAAd;AAIH;AACJ;AACJ,KArB4B,EAqB1B,IArB0B,CAA7B;AAsBH;;AAEDM,EAAAA,oBAAoB,GAAG;AACnBD,IAAAA,aAAa,CAAC,KAAKH,UAAN,CAAb;AACH;;AAEDK,EAAAA,MAAM,GAAG;AACL,UAAM;AAAER,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAyB,KAAKF,KAApC;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACMC,QAAQ,KAAK,CAAb,IAAkBC,QAAQ,KAAK,CAA/B,gBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,gBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOD,QAAP,OAAkBC,QAAQ,GAAG,EAAX,GAAiB,IAAGA,QAAS,EAA7B,GAAiCA,QAAnD,CAHV,CADJ;AAQH;;AA7CwC","sourcesContent":["import React, { Component } from 'react'\nimport seconds from './timer/seconds'\nimport minutes from './timer/minutes'\n\nexport default class Timer extends Component {\n    state = {\n        minutesn: minutes,\n        secondsn: seconds,\n    }\n\n    componentDidMount() {\n        this.myInterval = setInterval(() => {\n            const { secondsn, minutesn } = this.state\n\n            if (secondsn > 0) {\n                seconds--;\n                this.setState(({ secondsn }) => ({\n                    secondsn: secondsn - 1,\n                }))\n            }\n            if (secondsn === 0) {\n                if (minutesn === 0) {\n                    clearInterval(this.myInterval)\n                } else {\n                    minutes--;\n                    seconds = 59;\n                    this.setState(({ minutesn }) => ({\n                        minutesn: minutesn - 1,\n                        secondsn: 59\n                    }))\n                }\n            } \n        }, 1000)\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.myInterval)\n    }\n\n    render() {\n        const { minutesn, secondsn } = this.state\n        return (\n            <div>\n                { minutesn === 0 && secondsn === 0\n                    ? <h1>Busted!</h1>\n                    : <span>{minutesn}:{secondsn < 10 ? `0${secondsn}` : secondsn}</span>\n                }\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}